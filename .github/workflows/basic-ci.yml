name: Basic CI

on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  basic-checks:
    name: Basic Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "spr -> target"

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all-features --all-targets -- -D warnings

      - name: Build debug
        run: cargo build --verbose

      - name: Build release
        run: cargo build --release --verbose

      - name: Run unit tests
        run: cargo test --lib --verbose

      - name: Run integration tests (basic)
        run: cargo test --test minimal_integration_test --verbose

      - name: Test binary functionality
        run: |
          ./target/release/jj-spr --version
          ./target/release/jj-spr --help

  build-matrix:
    name: Build Matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev

      - name: Install system dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install pkg-config openssl

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "spr -> target"

      - name: Build
        run: cargo build --release

      - name: Test binary
        shell: bash
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            ./target/release/jj-spr.exe --version
          else
            ./target/release/jj-spr --version
          fi